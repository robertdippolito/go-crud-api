name: Sync k8s-API Manifests to GitOps Repo

# <-- Make sure this 'on:' is at the very left margin (no indent).
on:
  push:
    branches:
      - main

jobs:
  render-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout this k8s-api repo
      - name: Checkout k8s-api repo
        uses: actions/checkout@v3

      # 2. Checkout your GitOps repo
      - name: Checkout GitOps repo
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.GITOPS_REPO }}
          token:      ${{ secrets.GITOPS_TOKEN }}
          path:       gitops

      # 3. Configure AWS Credentials
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region:            ${{ vars.AWS_REGION }}

      # - name: Login to ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: Build, tag, and push Docker image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     ECR_REPOSITORY: api/my-repo-dev
      #     IMAGE_TAG: latest
      #   run: |
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 3. Install Helm CLI
      - name: Set up Helm
        uses: azure/setup-helm@v3

      # 4. Render chart into individual files under gitops/apps/k8s-api
      - name: Render k8s-api manifests as individual files
        run: |
          # 4a. Create a temporary output directory
          TMP_OUT=gitops/apps/k8s-api/_helm_render
          mkdir -p "$TMP_OUT"

          # 4b. Run helm template with output-dir
          helm template k8s-api ./_infra/k8s-api-chart \
            --namespace api \
            --values ./_infra/k8s-api-chart/values.yaml \
            --set image.tag=latest \
            --set ingress.hosts[0].host=${{ secrets.INGRESS_HOST }} \
            --set image.repository=${{ secrets.ECR_REPOSITORY }} \
            --output-dir "$TMP_OUT"

          # 4c. Move the three rendered YAMLs into gitops/apps/k8s-api/
          mkdir -p gitops/apps/k8s-api
          mv "$TMP_OUT"/k8s-api/templates/deployment.yaml gitops/apps/k8s-api/deployment.yaml
          mv "$TMP_OUT"/k8s-api/templates/service.yaml    gitops/apps/k8s-api/service.yaml
          mv "$TMP_OUT"/k8s-api/templates/ingress.yaml    gitops/apps/k8s-api/ingress.yaml
          mv "$TMP_OUT"/k8s-api/templates/clustersecretstore.yaml    gitops/apps/k8s-api/clustersecretstore.yaml
          mv "$TMP_OUT"/k8s-api/templates/externalsecret.yaml    gitops/apps/k8s-api/externalsecret.yaml

          # 4d. Clean up the temporary folder
          rm -rf "$TMP_OUT"

      - name: Render ingress-nginx manifests
        run: |
          mkdir -p gitops/apps/ingress-nginx
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm template ingress-nginx ingress-nginx/ingress-nginx \
            --namespace ingress-nginx \
            --values ./_infra/ingress-nginx-values.yaml \
            --version 4.7.1 > gitops/apps/ingress-nginx/all.yaml

      # 5. Commit & push only if changed
      - name: Commit & Push changes
        run: |
          cd gitops
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add apps/k8s-api/deployment.yaml \
                  apps/k8s-api/service.yaml \
                  apps/k8s-api/ingress.yaml \
                  apps/ingress-nginx/all.yaml

          if git diff --cached --quiet; then
            echo "No manifest changes to push"
          else
            git commit -m "ci: sync k8s-api manifests @ ${{ github.sha }}"
            git push origin main
          fi
